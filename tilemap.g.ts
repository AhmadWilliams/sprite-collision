// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex`100010000108080808080808080808080808080207090a0909090909090909090a09090507090a090909090a0909090a0a09090507090a0909090a0a0909090a090909050709090909090a090909090909090905070909090909090909090909090909050709090a09090909090909090a090905070909090909090909090a0a0909090507090909090909090909090909090905070a09090909090909090909090909050709090909090909090909090909090507090a0909090909090909090a0a090507090a09090909090909090a0a090905070a0a09090909090909090a090909050709090909090909090909090909090503060606060606060606060606060604`, img`
. . . . . . . . . . . . . . . . 
. . 2 . . . . . . . . . 2 . . . 
. . 2 . . . . 2 . . . 2 2 . . . 
. . 2 . . . 2 2 . . . 2 . . . . 
. . . . . . 2 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 2 . . . . . . . . 2 . . . 
. . . . . . . . . . 2 2 . . . . 
. . . . . . . . . . . . . . . . 
. 2 . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.darkGroundNorthWest0,sprites.dungeon.darkGroundNorthEast0,sprites.dungeon.darkGroundSouthWest0,sprites.dungeon.darkGroundSouthEast0,sprites.dungeon.darkGroundEast,sprites.dungeon.darkGroundSouth,sprites.dungeon.darkGroundWest,sprites.dungeon.darkGroundNorth,sprites.dungeon.darkGroundCenter,sprites.dungeon.floorMixed], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`100010000103030303030303030303030303030407020202020202020202020202020208070202020202020202020202020202080702020202020202020202020202020807020a0a02020202020202020a0202080702020a020202020202020a0a02020807020202020202020202020a020202080702020202020202020202020202020807020202020202020202020202020208070202020202020202020a0202020208070202020a02020202020a0a0a020208070202020a0a0202020202020a0202080702020a0a02020202020202020a02080702020a0202020202020202020202080702020202020202020202020202020805090909090909090909090909090906`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . 2 2 . . . . . . . . 2 . . . 
. . . 2 . . . . . . . 2 2 . . . 
. . . . . . . . . . . 2 . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . 2 . . . . . 
. . . . 2 . . . . . 2 2 2 . . . 
. . . . 2 2 . . . . . . 2 . . . 
. . . 2 2 . . . . . . . . 2 . . 
. . . 2 . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tilePath1,sprites.castle.tilePath5,sprites.castle.tilePath2,sprites.castle.tilePath3,sprites.castle.tilePath7,sprites.castle.tilePath9,sprites.castle.tilePath4,sprites.castle.tilePath6,sprites.castle.tilePath8,sprites.castle.tileGrass1], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
